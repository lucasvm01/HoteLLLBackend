// <auto-generated />
using System;
using HoteLLLBackend.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoteLLLBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospedagemPessoa", b =>
                {
                    b.Property<long>("HospedagensId")
                        .HasColumnType("bigint");

                    b.Property<long>("HospedesId")
                        .HasColumnType("bigint");

                    b.HasKey("HospedagensId", "HospedesId");

                    b.HasIndex("HospedesId");

                    b.ToTable("HospedagemPessoa");
                });

            modelBuilder.Entity("HoteLLLBackend.Domain.Entities.Hospedagens.Hospedagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataReserva")
                        .HasColumnType("datetime2");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAtiva")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReserva")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Hospedagens");
                });

            modelBuilder.Entity("HoteLLLBackend.Domain.Entities.Pessoas.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAtiva")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCadastro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("HoteLLLBackend.Domain.Entities.Quartos.Quarto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("HospedagemId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOcupado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReservado")
                        .HasColumnType("bit");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospedagemId");

                    b.ToTable("Quartos");
                });

            modelBuilder.Entity("HospedagemPessoa", b =>
                {
                    b.HasOne("HoteLLLBackend.Domain.Entities.Hospedagens.Hospedagem", null)
                        .WithMany()
                        .HasForeignKey("HospedagensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoteLLLBackend.Domain.Entities.Pessoas.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("HospedesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoteLLLBackend.Domain.Entities.Quartos.Quarto", b =>
                {
                    b.HasOne("HoteLLLBackend.Domain.Entities.Hospedagens.Hospedagem", null)
                        .WithMany("Quartos")
                        .HasForeignKey("HospedagemId");
                });

            modelBuilder.Entity("HoteLLLBackend.Domain.Entities.Hospedagens.Hospedagem", b =>
                {
                    b.Navigation("Quartos");
                });
#pragma warning restore 612, 618
        }
    }
}
